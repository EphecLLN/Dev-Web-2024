// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/auth/signup": {
            "post": {
                "description": "Send user data to create a new user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Send user data to create a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Users"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/producers": {
            "get": {
                "description": "Get producers id, name, picture and created values",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Producers"
                ],
                "summary": "Get producers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Producers"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Producers": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string",
                    "example": "2020-01-01"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "picture": {
                    "type": "string",
                    "example": "John.jpg"
                }
            }
        },
        "model.Users": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "1234 Main St"
                },
                "age": {
                    "type": "integer",
                    "example": 20
                },
                "cellphone": {
                    "type": "string",
                    "example": "1234567890"
                },
                "email": {
                    "type": "string",
                    "example": "John@example.com"
                },
                "gender": {
                    "type": "string",
                    "example": "M"
                },
                "locality": {
                    "type": "integer",
                    "example": 1650
                },
                "password": {
                    "type": "string",
                    "example": "1234"
                },
                "username": {
                    "type": "string",
                    "example": "John"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "local eat API",
	Description:      "This is a sample server local eat API server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
