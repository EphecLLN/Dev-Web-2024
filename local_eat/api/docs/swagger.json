{
    "produces": [
        "application/json"
    ],
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server local eat API server.",
        "title": "local eat API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/auth/authenticate": {
            "get": {
                "description": "Validate user token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Validate user token",
                "responses": {
                    "200": {
                        "description": "User authenticated"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "description": "Send username and password to login to receive a token in a cookie",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Send username and password to login",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Users"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User authenticated"
                    },
                    "400": {
                        "description": "Invalid password"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/auth/signup": {
            "post": {
                "description": "Send user data to create a new user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Send user data to create a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Users"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created"
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/producers": {
            "get": {
                "description": "Get producers id, name, picture and created values",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Producers"
                ],
                "summary": "Get producers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Producers"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/producers/register": {
            "post": {
                "description": "Post producer Lastname, Firstname, Phone number and pro email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Producers"
                ],
                "summary": "POST producers",
                "parameters": [
                    {
                        "description": "Producer object to be registered",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Producers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Producers": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "postmaster@example.com"
                },
                "firstname": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "lastname": {
                    "type": "string",
                    "example": "Vleminckx"
                },
                "phone_num": {
                    "type": "string",
                    "example": "0483598799"
                },
                "username": {
                    "type": "string",
                    "example": "john_vleminckx"
                }
            }
        },
        "models.Users": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string",
                    "example": "Mon Jan 2 15:04:05 MST 2006"
                },
                "email": {
                    "type": "string",
                    "example": "mateo@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
                },
                "producer": {
                    "$ref": "#/definitions/models.Producers"
                },
                "profile_picture_id": {
                    "type": "string",
                    "example": "1524689"
                },
                "username": {
                    "type": "string",
                    "example": "john_vleminckx"
                }
            }
        }
    }
}